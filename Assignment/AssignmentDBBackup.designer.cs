#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Assignment
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AssignmentDBBackup")]
	public partial class AssignmentDBBackupDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCategory_backup(Category_backup instance);
    partial void UpdateCategory_backup(Category_backup instance);
    partial void DeleteCategory_backup(Category_backup instance);
    partial void InsertDeliveryCompany_backup(DeliveryCompany_backup instance);
    partial void UpdateDeliveryCompany_backup(DeliveryCompany_backup instance);
    partial void DeleteDeliveryCompany_backup(DeliveryCompany_backup instance);
    partial void InsertProduct_backup(Product_backup instance);
    partial void UpdateProduct_backup(Product_backup instance);
    partial void DeleteProduct_backup(Product_backup instance);
    partial void InsertProduct_Category_backup(Product_Category_backup instance);
    partial void UpdateProduct_Category_backup(Product_Category_backup instance);
    partial void DeleteProduct_Category_backup(Product_Category_backup instance);
    #endregion
		
		public AssignmentDBBackupDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["AssignmentDBBackupConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public AssignmentDBBackupDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AssignmentDBBackupDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AssignmentDBBackupDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AssignmentDBBackupDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Category_backup> Category_backups
		{
			get
			{
				return this.GetTable<Category_backup>();
			}
		}
		
		public System.Data.Linq.Table<DeliveryCompany_backup> DeliveryCompany_backups
		{
			get
			{
				return this.GetTable<DeliveryCompany_backup>();
			}
		}
		
		public System.Data.Linq.Table<Product_backup> Product_backups
		{
			get
			{
				return this.GetTable<Product_backup>();
			}
		}
		
		public System.Data.Linq.Table<Product_Category_backup> Product_Category_backups
		{
			get
			{
				return this.GetTable<Product_Category_backup>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Categories")]
	public partial class Category_backup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CategoryID;
		
		private string _CategoryName;
		
		private bool _Publish;
		
		private EntitySet<Product_Category_backup> _Product_Category_backups;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCategoryIDChanging(int value);
    partial void OnCategoryIDChanged();
    partial void OnCategoryNameChanging(string value);
    partial void OnCategoryNameChanged();
    partial void OnPublishChanging(bool value);
    partial void OnPublishChanged();
    #endregion
		
		public Category_backup()
		{
			this._Product_Category_backups = new EntitySet<Product_Category_backup>(new Action<Product_Category_backup>(this.attach_Product_Category_backups), new Action<Product_Category_backup>(this.detach_Product_Category_backups));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CategoryName
		{
			get
			{
				return this._CategoryName;
			}
			set
			{
				if ((this._CategoryName != value))
				{
					this.OnCategoryNameChanging(value);
					this.SendPropertyChanging();
					this._CategoryName = value;
					this.SendPropertyChanged("CategoryName");
					this.OnCategoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Publish", DbType="Bit NOT NULL")]
		public bool Publish
		{
			get
			{
				return this._Publish;
			}
			set
			{
				if ((this._Publish != value))
				{
					this.OnPublishChanging(value);
					this.SendPropertyChanging();
					this._Publish = value;
					this.SendPropertyChanged("Publish");
					this.OnPublishChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Product_Category", Storage="_Product_Category_backups", ThisKey="CategoryID", OtherKey="CategoryID")]
		public EntitySet<Product_Category_backup> Product_Category_backups
		{
			get
			{
				return this._Product_Category_backups;
			}
			set
			{
				this._Product_Category_backups.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Product_Category_backups(Product_Category_backup entity)
		{
			this.SendPropertyChanging();
			entity.Category_backup = this;
		}
		
		private void detach_Product_Category_backups(Product_Category_backup entity)
		{
			this.SendPropertyChanging();
			entity.Category_backup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeliveryCompany")]
	public partial class DeliveryCompany_backup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CompanyID;
		
		private string _CompanyName;
		
		private string _CompanyLogo;
		
		private decimal _PricePerKG;
		
		private bool _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnCompanyLogoChanging(string value);
    partial void OnCompanyLogoChanged();
    partial void OnPricePerKGChanging(decimal value);
    partial void OnPricePerKGChanged();
    partial void OnStatusChanging(bool value);
    partial void OnStatusChanged();
    #endregion
		
		public DeliveryCompany_backup()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyLogo", DbType="VarChar(MAX)")]
		public string CompanyLogo
		{
			get
			{
				return this._CompanyLogo;
			}
			set
			{
				if ((this._CompanyLogo != value))
				{
					this.OnCompanyLogoChanging(value);
					this.SendPropertyChanging();
					this._CompanyLogo = value;
					this.SendPropertyChanged("CompanyLogo");
					this.OnCompanyLogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PricePerKG", DbType="Money NOT NULL")]
		public decimal PricePerKG
		{
			get
			{
				return this._PricePerKG;
			}
			set
			{
				if ((this._PricePerKG != value))
				{
					this.OnPricePerKGChanging(value);
					this.SendPropertyChanging();
					this._PricePerKG = value;
					this.SendPropertyChanged("PricePerKG");
					this.OnPricePerKGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit NOT NULL")]
		public bool Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product")]
	public partial class Product_backup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductID;
		
		private string _ProductName;
		
		private string _ProductDescription;
		
		private decimal _ProductPrice;
		
		private int _ProductQuantity;
		
		private string _ProductImage;
		
		private decimal _TotalSalesPrice;
		
		private int _TotalSalesQuantity;
		
		private bool _Publish;
		
		private EntitySet<Product_Category_backup> _Product_Category_backups;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnProductNameChanging(string value);
    partial void OnProductNameChanged();
    partial void OnProductDescriptionChanging(string value);
    partial void OnProductDescriptionChanged();
    partial void OnProductPriceChanging(decimal value);
    partial void OnProductPriceChanged();
    partial void OnProductQuantityChanging(int value);
    partial void OnProductQuantityChanged();
    partial void OnProductImageChanging(string value);
    partial void OnProductImageChanged();
    partial void OnTotalSalesPriceChanging(decimal value);
    partial void OnTotalSalesPriceChanged();
    partial void OnTotalSalesQuantityChanging(int value);
    partial void OnTotalSalesQuantityChanged();
    partial void OnPublishChanging(bool value);
    partial void OnPublishChanged();
    #endregion
		
		public Product_backup()
		{
			this._Product_Category_backups = new EntitySet<Product_Category_backup>(new Action<Product_Category_backup>(this.attach_Product_Category_backups), new Action<Product_Category_backup>(this.detach_Product_Category_backups));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this.OnProductNameChanging(value);
					this.SendPropertyChanging();
					this._ProductName = value;
					this.SendPropertyChanged("ProductName");
					this.OnProductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductDescription", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ProductDescription
		{
			get
			{
				return this._ProductDescription;
			}
			set
			{
				if ((this._ProductDescription != value))
				{
					this.OnProductDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ProductDescription = value;
					this.SendPropertyChanged("ProductDescription");
					this.OnProductDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductPrice", DbType="Money NOT NULL")]
		public decimal ProductPrice
		{
			get
			{
				return this._ProductPrice;
			}
			set
			{
				if ((this._ProductPrice != value))
				{
					this.OnProductPriceChanging(value);
					this.SendPropertyChanging();
					this._ProductPrice = value;
					this.SendPropertyChanged("ProductPrice");
					this.OnProductPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductQuantity", DbType="Int NOT NULL")]
		public int ProductQuantity
		{
			get
			{
				return this._ProductQuantity;
			}
			set
			{
				if ((this._ProductQuantity != value))
				{
					this.OnProductQuantityChanging(value);
					this.SendPropertyChanging();
					this._ProductQuantity = value;
					this.SendPropertyChanged("ProductQuantity");
					this.OnProductQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductImage", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ProductImage
		{
			get
			{
				return this._ProductImage;
			}
			set
			{
				if ((this._ProductImage != value))
				{
					this.OnProductImageChanging(value);
					this.SendPropertyChanging();
					this._ProductImage = value;
					this.SendPropertyChanged("ProductImage");
					this.OnProductImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalSalesPrice", DbType="Money NOT NULL")]
		public decimal TotalSalesPrice
		{
			get
			{
				return this._TotalSalesPrice;
			}
			set
			{
				if ((this._TotalSalesPrice != value))
				{
					this.OnTotalSalesPriceChanging(value);
					this.SendPropertyChanging();
					this._TotalSalesPrice = value;
					this.SendPropertyChanged("TotalSalesPrice");
					this.OnTotalSalesPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalSalesQuantity", DbType="Int NOT NULL")]
		public int TotalSalesQuantity
		{
			get
			{
				return this._TotalSalesQuantity;
			}
			set
			{
				if ((this._TotalSalesQuantity != value))
				{
					this.OnTotalSalesQuantityChanging(value);
					this.SendPropertyChanging();
					this._TotalSalesQuantity = value;
					this.SendPropertyChanged("TotalSalesQuantity");
					this.OnTotalSalesQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Publish", DbType="Bit NOT NULL")]
		public bool Publish
		{
			get
			{
				return this._Publish;
			}
			set
			{
				if ((this._Publish != value))
				{
					this.OnPublishChanging(value);
					this.SendPropertyChanging();
					this._Publish = value;
					this.SendPropertyChanged("Publish");
					this.OnPublishChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Product_Category", Storage="_Product_Category_backups", ThisKey="ProductID", OtherKey="ProductID")]
		public EntitySet<Product_Category_backup> Product_Category_backups
		{
			get
			{
				return this._Product_Category_backups;
			}
			set
			{
				this._Product_Category_backups.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Product_Category_backups(Product_Category_backup entity)
		{
			this.SendPropertyChanging();
			entity.Product_backup = this;
		}
		
		private void detach_Product_Category_backups(Product_Category_backup entity)
		{
			this.SendPropertyChanging();
			entity.Product_backup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product_Categories")]
	public partial class Product_Category_backup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CategoryID;
		
		private int _ProductID;
		
		private EntityRef<Category_backup> _Category_backup;
		
		private EntityRef<Product_backup> _Product_backup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCategoryIDChanging(int value);
    partial void OnCategoryIDChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    #endregion
		
		public Product_Category_backup()
		{
			this._Category_backup = default(EntityRef<Category_backup>);
			this._Product_backup = default(EntityRef<Product_backup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					if (this._Category_backup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._Product_backup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Product_Category", Storage="_Category_backup", ThisKey="CategoryID", OtherKey="CategoryID", IsForeignKey=true)]
		public Category_backup Category_backup
		{
			get
			{
				return this._Category_backup.Entity;
			}
			set
			{
				Category_backup previousValue = this._Category_backup.Entity;
				if (((previousValue != value) 
							|| (this._Category_backup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category_backup.Entity = null;
						previousValue.Product_Category_backups.Remove(this);
					}
					this._Category_backup.Entity = value;
					if ((value != null))
					{
						value.Product_Category_backups.Add(this);
						this._CategoryID = value.CategoryID;
					}
					else
					{
						this._CategoryID = default(int);
					}
					this.SendPropertyChanged("Category_backup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Product_Category", Storage="_Product_backup", ThisKey="ProductID", OtherKey="ProductID", IsForeignKey=true)]
		public Product_backup Product_backup
		{
			get
			{
				return this._Product_backup.Entity;
			}
			set
			{
				Product_backup previousValue = this._Product_backup.Entity;
				if (((previousValue != value) 
							|| (this._Product_backup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product_backup.Entity = null;
						previousValue.Product_Category_backups.Remove(this);
					}
					this._Product_backup.Entity = value;
					if ((value != null))
					{
						value.Product_Category_backups.Add(this);
						this._ProductID = value.ProductID;
					}
					else
					{
						this._ProductID = default(int);
					}
					this.SendPropertyChanged("Product_backup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
